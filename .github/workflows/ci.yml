name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.in-project true

      - name: Cache Poetry virtualenv
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --sync --no-interaction --no-ansi --with dev

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit

      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files

      - name: Run tests with coverage
        run: poetry run pytest --cov=flaccid

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  release:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python & Poetry
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.in-project true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-python-3.11-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --sync --no-interaction --no-ansi --with dev

      - name: Build distributions
        run: poetry build

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --no-interaction --username __token__ --password "$POETRY_PYPI_TOKEN"
